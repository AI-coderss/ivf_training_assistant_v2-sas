.voice-assistant {
  position: fixed;
  right: 0;
  top: 80px; /* Positioned below the assumed 80px header */
  width: 28%; /* Slightly increased width for better content display */
  max-width: 450px; /* Set a max-width */
  height: calc(80vh - 80px); /* Fill remaining viewport height */
  padding: 20px; /* General padding */
  background: rgba(255, 255, 255, 0.3); /* Slightly more opaque for better visibility */
  backdrop-filter: blur(0.5px); /* Increased blur for stronger visual separation */
  -webkit-backdrop-filter: blur(0.5px);
  border-left: 1px solid rgba(255, 255, 255, 0.4); /* Stronger border for clarity */
  color: #ffffff;
  box-shadow: -6px 0 16px rgba(0, 0, 0, 0.2); /* Deeper shadow */
  z-index: 1000;
  display: flex;
  flex-direction: column;
  /* justify-content: space-between; *//* We might not need this if footer is just for mic */
  box-sizing: border-box;
  margin-top: 0;
  /* padding-top is adjusted to ensure content clears the new close button and potential orb */
  padding-top: 70px; /* Increased to make space for close button + orb considerations */
  /* Add padding-bottom to ensure content doesn't go under the mic button */
  padding-bottom: 80px; /* Adjust based on mic button size and desired spacing */
}

.assistant-orb {
  position: absolute;
  top: 30%; /* Center vertically */
  left: 50%;
  transform: translate(-50%, -50%); /* Center horizontally and pull half its height up */
  width: 180px; /* Adjust size as needed for your GIF */
  height: 180px; /* Adjust size as needed for your GIF */
  border-radius: 50%; /* Make it circular */
  object-fit: cover; /* Ensures the GIF covers the circle */
  z-index: 1001; /* Ensure it's above other elements in the assistant */
}

.assistant-content {
  margin-top: 200px;
  flex: 1; /* Enable scrolling for content if it overflows */
  padding-right: 10px; /* Add some padding for scrollbar */
  color: #333; /* Ensure content is visible */
  /* margin-top: 10px; */ /* May not be needed depending on orb and padding-top of parent */
}

/* Assistant Footer might not be needed if mic is absolutely positioned,
   or it might contain other elements. If it was only for the mic and close button,
   and both are now absolutely positioned, you might be able to remove or repurpose it. */
.assistant-footer {
  /* display: flex; */ /* Original flex properties might not be relevant */
  /* justify-content: space-around; */
  /* align-items: center; */
  /* margin-top: 20px; */ /* May not be needed */
  /* padding-top: 10px; */
  /* border-top: 1px solid rgba(255, 255, 255, 0.2); */ /* Subtle separator */
  /* This element might become a container for other footer items or be removed */
  /* For now, let's assume it might still exist for other purposes or can be cleaned up later */
  width: 100%; /* Ensure it takes width if still used for other non-positioned items */
  position: relative; /* If you have other items in footer to position relatively */
}

.mic-icon-btn {
  margin-bottom: 80px;
  background-color: #007BFF;
  color: white;
  width: 60px; /* Slightly larger for prominence */
  height: 60px; /* Slightly larger for prominence */
  display: flex;
  align-items: center;
  justify-content: center;
  border: none;
  border-radius: 50%;
  padding: 0;
  cursor: pointer;
  transition: background 0.3s ease, transform 0.2s ease;
  font-size: 1.5rem; /* Larger icon */
  position: absolute;   /* MODIFIED */
  bottom: 20px;         /* MODIFIED - Adjust as needed */
  left: 50%;            /* MODIFIED */
  transform: translateX(-50%); /* MODIFIED - To center it */
  z-index: 1005;        /* MODIFIED - Ensure it's above content */
  overflow: visible;
}





.mic-icon-btn:hover {
  background-color: #0069d9;
  transform: translateX(-50%) translateY(-2px); /* MODIFIED - Maintain X transform */
}

.close-btn {
  /* padding: 12px 18px; */ /* Padding is less relevant with fixed size */
  color: white;
  background-color: #ffa3a3;
  width: 40px;  /* Adjusted size */
  height: 40px; /* Adjusted size */
  display: flex;
  align-items: center;
  justify-content: center;
  border: none;
  border-radius: 50%;
  cursor: pointer;
  transition: background 0.3s ease, transform 0.2s ease;
  font-size: 1rem;
  position: absolute; /* MODIFIED */
  bottom: 105px;          /* MODIFIED - Adjust as needed (respecting parent padding) */
  right: 15px;         /* MODIFIED - Adjust as needed (respecting parent padding) */
  z-index: 1005;       /* MODIFIED - Ensure it's above content and orb */
}

.close-btn:hover {
  background-color: #dc2626;
  transform: translateY(-2px);
}

/* ðŸ“± Responsive */
@media (max-width: 1024px) {
  .voice-assistant {
    position: fixed;
    width: 100%;
    max-width: none;
    height: auto;
    padding: 16px;
    /* padding-top for static needs to consider where close button will be */
    /* If close button remains absolute, its context changes. */
    /* For static, you might need a different strategy or make parent relative. */
    padding-top: 60px; /* Re-evaluate this based on mobile layout */
    padding-bottom: 70px; /* Re-evaluate for mic button */
    border-left: none;
    border-top: 1px solid rgba(255, 255, 255, 0.2);
    box-shadow: 0 -4px 12px rgba(0, 0, 0, 0.1);
    margin-top: 20px;
    backdrop-filter: none;
    -webkit-backdrop-filter: none;
    /* If .voice-assistant is static, you may want to make it relative
       if you intend to keep child buttons absolutely positioned *to it*. */
    /* position: relative; /* Consider this for mobile if buttons are still absolute */
  }

  .assistant-orb {
    display: none;
  }

  .assistant-footer {
    /* Adjust footer for mobile if it's still in use */
    justify-content: space-around;
    margin-top: 1rem;
  }

  .mic-icon-btn {
  display: block;
  margin: 0 auto 20px auto;
  position: relative;
  left: auto;
  bottom: auto;
  transform: none;
}


  .close-btn {
    /* For mobile, top-right of a static full-width block.
       If .voice-assistant becomes 'relative' in media query, this works: */
    /* top: 10px; */
    /* right: 10px; */
    /* Or use a flex approach if it's part of a header bar */
    /* For simplicity, let's assume for now it might also become static flow
       or you make .voice-assistant relative in the media query */
    position: absolute; /* Keep it absolute for this example, assuming parent becomes relative or you want it viewport-relative */
    top: 10px;          /* Adjust for mobile */
    right: 10px;         /* Adjust for mobile */

  }
}
<<<<<<< HEAD
@media (max-width: 768px) {
  *,
  *::before,
  *::after {
    animation: none !important;
    transition: none !important;
=======

.waveform-container {
  width: 100%;
  max-width: 100%;
  margin-top: 25px;
}

.waveform-container canvas {
  width: 100% !important;
  height: 120px !important;
  display: block;
  border-radius: 10px;
}

.assistant-loader-overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  backdrop-filter: blur(8px);
  background: rgba(255, 255, 255, 0.2);
  z-index: 10000;
  display: flex;
  align-items: center;
  justify-content: center;
  pointer-events: none;
}

.assistant-loader {
  text-align: center;
  color: #000;
  font-weight: 500;
  backdrop-filter: none;
}

.assistant-loader .spinner {
  margin-top: 10px;
  width: 30px;
  height: 30px;
  border: 4px solid #ccc;
  border-top-color: #0a66c2;
  border-radius: 50%;
  animation: spin 0.8s linear infinite;
}
.mic-icon-btn.mic-active {
  background-color: #10b981;
  box-shadow: 0 0 0 4px rgba(16, 185, 129, 0.3);
}

@media (min-width: 1025px) {
  .mic-icon-btn.mic-active {
    transform: translateX(-50%) scale(1.05);
  }
}

.mic-icon-btn.mic-active::after {
  border-color: #10b981; 
  animation: mic-radiate-green 1.2s infinite;
}

@keyframes mic-radiate-green {
  0% {
    opacity: 0.4;
    transform: translate(-50%, -50%) scale(1);
  }
  70% {
    opacity: 0.15;
    transform: translate(-50%, -50%) scale(1.4);
  }
  100% {
    opacity: 0;
    transform: translate(-50%, -50%) scale(1.7);
>>>>>>> origin/zaviyaar-version
  }
}