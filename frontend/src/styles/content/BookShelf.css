/* Add these at the top of your CSS or within the .bookshelf scope */
:root {
  --book-width-3d: 160px;   /* Adjust as desired */
  --book-height-3d: 240px;  /* Adjust to maintain aspect ratio */
  --book-depth-3d: 33px;    /* Thickness of the book */
  --cover-offset-3d: 2px;   /* Small offset for pages from cover edge, like Codepen's 3px */
}
/* --- Existing .bookshelf and .shelf-title (mostly unchanged) --- */
.bookshelf {
  width: 100%;
  max-width: 240px; /* This might need to be wider if books are 160px + margin */
  padding: 20px 10px;
  background-color: #f5f7fa;
  display: flex;
  flex-direction: column;
  align-items: center;
  border-right: 1px solid #ddd;
  box-shadow: 2px 0 8px rgba(0, 0, 0, 0.05);
  max-height: calc(100vh - 40px);
  overflow-y: auto;
  -webkit-overflow-scrolling: touch;
  scrollbar-width: none;
  -ms-overflow-style: none;
}

.bookshelf::-webkit-scrollbar {
  display: none;
}

.shelf-title {
  font-size: 1.2rem;
  margin-bottom: 20px;
  font-weight: bold;
  color: #333;
  text-align: center;
  flex-shrink: 0;
}

/* --- MODIFIED .book-item and related elements --- */
.book-item {
  /* For 3D effect view (desktop) */
  width: var(--book-width-3d);
  height: var(--book-height-3d);
  margin-bottom: 40px; /* Increased margin to accommodate 3D and potential lift */
  cursor: pointer;
  position: relative; /* Crucial for positioning pseudo-elements and book-image */
  text-align: center;
  flex-shrink: 0;

  perspective: 1200px; /* Perspective for the 3D effect, was 1200px */
  transform-style: preserve-3d;

  /* Adapted from Codepen .book */
  transform: rotateY(-30deg);
  transition: transform 1s ease, box-shadow 0.4s ease-out; /* Keep existing box-shadow transition */
  animation: 1s ease 0s 1 initBookShelfAnimation;
}

@keyframes initBookShelfAnimation {
  0% {
    transform: rotateY(0deg);
  }
  100% {
    transform: rotateY(-30deg);
  }
}

.book-item:hover {
  /* Adapted from Codepen .book:hover, added translateY from your original hover */
  transform: rotateY(0deg) translateY(-10px);
  /* You can keep or adjust your existing box-shadow on hover if desired */
  box-shadow: 0 18px 30px rgba(0, 0, 0, 0.25);
}

.book-item.selected {
  /* This might need adjustment if it interferes with 3D visually */
   border: 2px solid #007bff;  /* Consider outline or a different indicator */
   background-color: #eef6ff; 

  /* For 3D, selection might be shown by a stronger lift or a different rotation */
  transform: rotateY(10deg) translateY(-15px) translateZ(20px);
  
}

.book-image { /* This is now the FRONT COVER */
  width: 100%; /* Will take width from .book-item */
  height: 100%; /* Will take height from .book-item */
  object-fit: cover; /* Ensure image covers the area */
  border-radius: 0 var(--cover-offset-3d) var(--cover-offset-3d) 0; /* Codepen like border */

  position: absolute; /* Positioned within .book-item's 3D space */
  top: 0;
  left: 0;

  /* Style from Codepen .book > :first-child */
  background-color: #ccc; /* Fallback if image is transparent or slow to load */
  box-shadow: 5px 5px 20px #ffffff;

  /* Ensure it's the front face */
  transform: translateZ(0); /* Or a tiny positive value like 0.1px to ensure it's on top */

  /* Remove old transforms and transitions that conflict */
  /* transform: rotateY(-5deg) rotateX(5deg) translateZ(10px); NO */
  /* transform-origin: left center; NO */
  transition: none; /* Transitions are now on .book-item */
  z-index: 1; /* Not strictly needed with absolute positioning if HTML order is right, but good practice */
}

/* REMOVE existing .book-image::before (spine) and .book-image::after (sheen) */
/* .book-image::before { display: none; } */
/* .book-image::after { display: none; } */


/* NEW: .book-item::before for PAGES/SPINE (Side of the book) */
.book-item::before {
  content: '';
  position: absolute;
  /* Dimensions based on variables */
  width: var(--book-depth-3d);
  height: calc(var(--book-height-3d) - 2 * var(--cover-offset-3d));
  top: var(--cover-offset-3d);
  left: 0; /* Will be transformed into place */

  background: #f8f8f0; /* Creamy page color */
  border: 1px solid #e0e0d0; /* Subtle border for page stack */
  box-sizing: border-box;

  /* Transform from Codepen .book::before, adapted for variables */
  /* This positions the spine on the "right" side of the front cover (as book is rotated -30deg) */
  transform-origin: center left; /* Rotate around its own left edge when placing */
   transform:
    translateX(calc(var(--book-width-3d) - var(--book-depth-3d) / 2 - var(--cover-offset-3d)))
    rotateY(90deg)
    translateX(calc(var(--book-depth-3d) / 2));
  z-index: 0; /* Behind front cover image content, but part of the 3D object */
}

/* NEW: .book-item::after for BACK COVER (Replaces your wooden shelf line) */
.book-item::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%; /* var(--book-width-3d) */
  height: 100%; /* var(--book-height-3d) */

  background: #a5a5a5; /* Darker back cover color, from Codepen #01060f is very dark */
  border-radius: 0 var(--cover-offset-3d) var(--cover-offset-3d) 0; /* Match front cover's right side */

  /* Push it back by the depth of the book */
  transform: translateZ(calc(-1 * var(--book-depth-3d)));
  box-shadow: -10px 0 30px rgba(0, 0, 0, 0.3); /* Adjusted shadow from Codepen */
  z-index: -1; /* Ensure it's behind the front cover and pages in paint order if not for z-transform */
}

.book-title {
  margin-top: 10px; /* Adjust if .book-item height is fixed */
  font-size: 0.85rem;
  color: #444;
  font-weight: 500;
  /* If .book-item is fixed height, title might need to be outside or carefully positioned */
  /* For now, assuming it's displayed below the fixed-height book-item */
  position: relative; /* To ensure it's not caught in 3D transforms of book-item if it were inside */
  width: var(--book-width-3d); /* Match book width */
  transform: translateZ(0); /* Reset any inherited 3D transformation */
}


/* --- RESPONSIVE OVERRIDES --- */
@media (max-width: 1024px) {
  .bookshelf {
    flex-direction: row;
    flex-wrap: nowrap;
    overflow-x: auto;
    overflow-y: hidden;
    max-width: 100%;
    height: auto;
    border-right: none;
    border-bottom: 1px solid #ccc;
    padding: 10px;
    max-height: none;
  }

  .bookshelf::-webkit-scrollbar {
    display: flex;
    height: 8px;
  }
  .bookshelf::-webkit-scrollbar-track { background: #f1f1f1; border-radius: 10px; }
  .bookshelf::-webkit-scrollbar-thumb { background: #888; border-radius: 10px; }
  .bookshelf::-webkit-scrollbar-thumb:hover { background: #555; }

  .book-item {
    /* Override 3D fixed dimensions */
    width: 140px; /* Your original mobile min-width */
    height: auto; /* Allow height to be determined by content */
    min-width: 140px;
    margin: 0 10px;
    margin-bottom: 15px;

    /* Disable 3D effects */
    perspective: none;
    transform-style: flat;
    animation: none; /* Remove init animation */
    transform: none !important; /* Remove initial 3D transform, !important to override specificity if needed */
    transition: transform 0.2s ease-out, box-shadow 0.2s ease-out; /* Simpler transition for mobile */
  }

  .book-item:hover {
    transform: translateY(-5px); /* Simpler hover for mobile */
    box-shadow: 0 8px 14px rgba(0, 0, 0, 0.15); /* Revert to simpler shadow */
  }

  .book-item.selected {
    border: 2px solid #007bff; /* Restore border selection for flat view */
    background-color: #eef6ff;
    transform: translateY(-5px) scale(1.02); /* Simple selected effect for mobile */
    box-shadow: 0px 0px 15px #007bff;
  }

  .book-image {
    position: relative; /* Back to relative for normal flow */
    /* Remove fixed 3D styling */
    border-radius: 6px; /* Your original border-radius */
    box-shadow: 0 8px 14px rgba(0, 0, 0, 0.15); /* Revert to simpler shadow for mobile */
    /* transform: none; NO, already handled by .book-item transform:none */
    /* transform-origin: center center; NO */
    /* transition: none; NO */
    object-fit: cover; /* keep this */
  }

  /* Hide 3D pseudo-elements on mobile */
  .book-item::before,
  .book-item::after {
    display: none !important; /* Ensure they are hidden */
  }

  .book-title {
    transform: none;
    width: auto; /* Reset width */
    margin-top: 8px;
  }

  .shelf-title {
    display: none;
  }
}

/* Further responsive overrides for smaller screens, mostly unchanged but ensure 3D reset is effective */
@media (max-width: 480px) {
  .bookshelf { padding: 6px; min-width: 0; }
  .book-item { min-width: 110px; width: 110px; margin: 0 5px 10px 5px; }
  .book-item:hover { transform: translateY(-3px); }
  .book-title { font-size: 0.75rem; }
}

@media (max-width: 600px) and (min-width: 481px) {
  .bookshelf { padding: 8px; }
  .book-item { min-width: 120px; width: 120px; margin: 0 8px 12px 8px; }
  .book-item:hover { transform: translateY(-4px); }
  .book-title { font-size: 0.8rem; }
}

@media (max-width: 768px) and (min-width: 601px) { /* Tablet size, but <=768 already flattens */
  /* If 768px is the breakpoint for flat, this rule might not see 3D.
     If you want 3D on tablets > 768px, adjust the 768px media query.
     For now, assuming this range is also flat due to the max-width: 768px rule. */
  .bookshelf { padding: 10px; max-width: 100%; }
  .book-item { min-width: 130px; width: 130px; margin: 0 10px 15px 10px; }
  .book-title { font-size: 0.9rem; }
}


/* Large devices (small laptops, 901px to 1200px) - 3D effect IS active here */
@media (max-width: 1200px) and (min-width: 768px) {
  /* .bookshelf max-width was 180px, this might be too small for 160px books + padding/margin */
  .bookshelf {
    padding: 27px 8px;
  }
  .book-item {
    /* Uses the 3D dimensions defined by CSS variables */
    margin-bottom: 30px; /* Original margin-bottom for this size */
  }
}

/* --- RESPONSIVE OVERRIDES --- */
@media (max-width: 768px) {
  .bookshelf {
    /* Key styles for horizontal layout and scrolling */
    flex-direction: row;   /* 1. Arrange book items in a row */
    flex-wrap: nowrap;   /* 2. Prevent books from wrapping to the next line */
    overflow-x: auto;    /* 3. Enable horizontal scrolling if content overflows */
    
    /* Other adjustments for horizontal layout */
    overflow-y: hidden;  /* Disable vertical scrolling */
    max-width: 100%;     /* Bookshelf takes full available width */
    height: auto;        /* Height adjusts to content */
    border-right: none;
    border-bottom: 1px solid #ccc; /* Consistent with horizontal layout */
    padding: 10px;
    max-height: none;    /* Remove max-height constraint */
  }

  /* Optional: Styling for the horizontal scrollbar (Webkit browsers) */
  .bookshelf::-webkit-scrollbar {
    display: flex; /* Or display: block; depending on preference */
    height: 8px;   /* Height of the horizontal scrollbar */
  }
  .bookshelf::-webkit-scrollbar-track {
    background: #f1f1f1;
    border-radius: 10px;
  }
  .bookshelf::-webkit-scrollbar-thumb {
    background: #888;
    border-radius: 10px;
  }
  .bookshelf::-webkit-scrollbar-thumb:hover {
    background: #555;
  }

  .book-item {
    /* Adjust book item properties for horizontal layout */
    width: 140px;       /* Set a specific width for books in the row */
    height: auto;
    min-width: 140px;   /* Ensure books don't get too small */
    margin: 0 10px;     /* Add horizontal margin between books */
    margin-bottom: 15px;/* Bottom margin, e.g., for title if it's below or scrollbar space */

    /* Disable 3D effects and use simpler mobile transforms */
    perspective: none;
    transform-style: flat;
    animation: none;
    transform: none !important; /* Reset transforms */
    transition: transform 0.2s ease-out, box-shadow 0.2s ease-out;
  }

  .book-item:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 14px rgba(0, 0, 0, 0.15);
  }

  /* Hide 3D pseudo-elements on mobile */
  .book-item::before,
  .book-item::after {
    display: none !important;
  }
  
  /* Other mobile-specific resets as previously defined */
  .book-image {
    position: relative;
    border-radius: 6px;
    box-shadow: 0 8px 14px rgba(0,0,0,0.15);
  }
  .book-title {
    transform: none;
    width: auto;
    margin-top: 8px;
  }
  .shelf-title {
    display: none;
  }
}

/*
   The following more specific media queries for even smaller devices
   will INHERIT the horizontal scrolling behavior from the (max-width: 768px) rule
   because they don't override `overflow-x`, `flex-direction`, or `flex-wrap`.
   They primarily adjust item sizes and padding.
*/

/* Extra small devices (phones, less than 480px) */
@media (max-width: 480px) {
  .bookshelf {
    padding: 6px;
  }
  .book-item {
    min-width: 110px;
    width: 110px;
    margin: 0 5px 10px 5px; /* Adjusted margin for smaller items */
  }
  /* ... other styles for <480px ... */
}

/* Small devices (phones landscape, 481px to 600px) */
@media (max-width: 600px) and (min-width: 481px) {
  .bookshelf {
    padding: 8px;
  }
  .book-item {
    min-width: 120px;
    width: 120px;
    margin: 0 8px 12px 8px; /* Adjusted margin */
  }
  /* ... other styles for this range ... */
}

/* Medium devices (tablets, 601px to ~768px where horizontal scrolling kicks in) */
/* This rule applies to screens between 601px and 900px.
   However, the horizontal scrolling from the (max-width: 768px) rule
   will take precedence for screens <= 768px. */
@media (max-width: 900px) and (min-width: 601px) {
  .bookshelf {
    /* If screen width is <= 768px, it's already horizontal.
       If screen width is > 768px (e.g., 800px), it will use desktop (vertical 3D) styles. */
    padding: 10px;
  }
  .book-item {
    /* These widths apply if the layout is horizontal (i.e., screen <= 768px) */
    min-width: 130px; /* Adjust if needed for this range when horizontal */
    width: 130px;
    margin: 0 10px 15px 10px; /* Adjusted margin */
  }
  /* ... other styles for this range ... */
}